swagger: '2.0'
info:
  description: 'This is rest api document for Go2Share project.'
  version: 1.1.0
  title: Go2Share api docs
  termsOfService: 'http://swagger.io/terms/'
  contact:
    email: nishant.shah@wwindia.com
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
host: localhost
basePath: /v1
tags:
  - name: user
    description: Operations about user
    externalDocs:
      description: Find out more about our user
      url: 'http://swagger.io'
schemes:
  - https
  - http
paths:

  /user:
    post:
      tags:
        - user
      summary: Create user
      description: This can only be done by the logged in user.
      operationId: createUser
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: Created user object
          required: true
          schema:
            $ref: '#/definitions/User'
      responses:
        default:
          description: successful operation
      security:
       - jwt: []

  '/user/{id}':
    get:
      tags:
        - user
      summary: Get user by user name
      description: ''
      operationId: getUserByID
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: 'The name that needs to be fetched. Use user1 for testing. '
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/User'
        '400':
          description: Invalid username supplied
        '404':
          description: User not found
      security:
       - jwt: []
    put:
      tags:
        - user
      summary: Updated user
      description: This can only be done by the logged in user.
      operationId: updateUser
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: name that need to be updated
          required: true
          type: string
        - in: body
          name: body
          description: Updated user object
          required: true
          schema:
            $ref: '#/definitions/User'
      responses:
        '400':
          description: Invalid user supplied
        '404':
          description: User not found
      security:
       - jwt: []
    delete:
      tags:
        - user
      summary: Delete user
      description: This can only be done by the logged in user.
      operationId: deleteUser
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: The name that needs to be deleted
          required: true
          type: string
      responses:
        '400':
          description: Invalid username supplied
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: User not found
          schema:
            $ref: '#/definitions/ErrorResponse'
      security:
       - jwt: []

  /user/login:
    get:
      tags:
        - user
      summary: Logs user into the system
      description: ''
      operationId: loginUser
      produces:
        - application/json
      parameters:
        - name: username
          in: query
          description: The user name for login
          required: true
          type: string
        - name: password
          in: query
          description: The password for login in clear text
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            type: string
          headers:
            X-Rate-Limit:
              type: integer
              format: int32
              description: calls per hour allowed by the user
            X-Expires-After:
              type: string
              format: date-time
              description: date in UTC when token expires
        '400':
          description: Invalid username/password supplied
  /user/logout:
    get:
      tags:
        - user
      summary: Logs out current logged in user session
      description: ''
      operationId: logoutUser
      produces:
        - application/json
      parameters: []
      responses:
        default:
          description: successful operation
      security:
       - jwt: []
securityDefinitions:
  jwt:
    type: apiKey
    name: jwt_token
    in: header


definitions:
  TU:
    type: object
    required:
      - name
      - chassis_number
      - make

    properties:
      name:
        type: string
      category:
        $ref: "#/definitions/TU_Category"
      make:
        type: string
      model:
        type: string
      pictures:
        type: "array"
        items:
          type: string
          format: url
      chassis_number:
        type: string
      registraion_date:
        type: string
        format: date
      color:
        type: string
      wheels:
        type: integer
      doors:
        type: integer
      seats:
        type: integer
      fuel_type:
        type: string
        enum:
          - "petrol"
          - "disel"
          - "cng"
          - "lpg"
          - "ev"
      is_insured:
        type: boolean
      insurance_number:
        type: string
      insurance_company:
        type: string
      insurance_expiry:
        type: string
        format: date
      registration_type:
        type: string
        enum:
          - "private"
          - "public"
          - "business"
      comment:
        type: string
  TU_Category:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
        example: "car,bike,yacht"
      icon:
        type: "string"
        format: url
      license_type:
        type: "array"
        items:
           type: string
  License:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
      gender:
        type: "string"
      dob:
        type: "string"
      license_no:
        type: "string"
      pictures:
        type: "array"
        items:
          type: string
          format: url
      issue_date:
        type: string
        format: date
      expiry_date:
        type: string
        format: date
      license_type:
        type: "array"
        items:
           type: string
      country:
        type: string
      class:
        type: string
      restriction:
        type: string
      is_valid:
        type: boolean
      comment:
        type: string
  User:
    type: object
    required:
      - phone
      - email
    properties:
      id:
        type: integer
        format: int64
      avatar:
        type: string
        format: url
      first_name:
        type: string
      last_name:
        type: string
      email:
        type: string
      gender:
        type: boolean
      phone:
        type: string
      dob:
        type: string
        format: date
      country:
        type: string
      country_code:
        type: integer
      user_type:
        type: string
        enum:
          - "individual"
          - "business"
      status:
        type: string
        enum:
          - "deleted"
          - "approved"
          - "rejected"
          - "incomplete"
          - "processing"
      license:
         $ref: "#/definitions/License"
      created_at:
        type: string
        format: date_time
      updated_at:
        type: string
        format: date_time
      deleted_at:
        type: string
        format: date_time
  ErrorResponse:
    type: object
    properties:
      code:
        type: integer
        format: int32
      type:
        type: string
      message:
        type: string
      host:
        type: string
      endpoint:
        type: string
externalDocs:
  description: Find out more about Neosoft
  url: 'http://neosofttech.com'
